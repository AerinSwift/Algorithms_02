# Домашняя работа №2.

# 01. Написать программу, которая будет складывать, вычитать, умножать или делить два числа.
# Числа и знак операции вводятся пользователем.
# После выполнения вычисления программа не должна завершаться, а должна запрашивать новые данные для вычислений.
# Завершение программы должно выполняться при вводе символа '0' в качестве знака операции.
# Если пользователь вводит неверный знак (не '0', '+', '-', '*', '/'),
# то программа должна сообщать ему об ошибке и снова запрашивать знак операции.
# Также сообщать пользователю о невозможности деления на ноль, если он ввел 0 в качестве делителя.

print("Добро пожаловать в калькулятор. В качестве знаком операции вводите символы '+', '-', '*', '/'")
print("Для завершения работы в качества знака операции введите ноль ")

while True:
    op = input("Введите знак операции (+,-,*,/): ")
    if op == '0':
        break
    if op in ('+', '-', '*', '/'):
        x = float(input("x="))
        y = float(input("y="))
        if op == '+':
            print("%.2f" % (x+y))
        elif op == '-':
            print("%.2f" % (x-y))
        elif op == '*':
            print("%.2f" % (x*y))
        elif op == '/':
            if y != 0:
                print("%.2f" % (x/y))
            else:
                print("На ноль делить нельзя")
    else:
        print("Некорректный знак операции")

# 02. Посчитать четные и нечетные цифры введенного натурального числа.
# Например, если введено число 34560, то у него 3 четные цифры (4, 6 и 0) и 2 нечетные (3 и 5).

print("Введите натуральное число (будет посчитаны четные и нечетные числа).")
user_number = int(input())
even = 0
odd = 0
while user_number > 0:
    if user_number % 2 == 0:
        even += 1
    else:
        odd += 1
    user_number = user_number//10
# print("четных - %d, нечетных - %d" % (even, odd))
print("Четных чисел - ", even)
print("Нечетных чисел - ", odd)

# 03. Сформировать из введенного числа обратное по порядку входящих в него цифр и вывести на экран.
# Например, если введено число 3486, то надо вывести число 6843.

print("Введите натуральное число (оно будет выведено в обратном порядке).")
n = int(input())
m = 0
while n > 0:
    m = m * 10 + n % 10
    n = n//10
print(m)

# 04. Найти сумму n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...
# Количество элементов (n) вводится с клавиатуры.

print("Введите количество элементов. Будет найдена сумма n элементов следующего ряда чисел: 1 -0.5 0.25 -0.125 ...")
n = int(input())
e = 1
summ = 0
for i in range(n):
    summ += e
    e /= -2
print(summ)

# 05. Вывести на экран коды и символы таблицы ASCII, начиная с символа под номером 32 и заканчивая 127-м включительно.
# Вывод выполнить в табличной форме: по десять пар "код-символ" в каждой строке.

print("На экран будут выведены коды и символы таблицы ASCII с 32 по 127.")
for i in range(32, 128):
    print("%4d-%s" % (i, chr(i)), end='')
    if i % 10 == 0:
        print()
print()

# 06. В программе генерируется случайное целое число от 0 до 100.
# Пользователь должен его отгадать не более чем за 10 попыток.
# После каждой неудачной попытки должно сообщаться больше или меньше введенное пользователем число,
# чем то, что загадано. Если за 10 попыток число не отгадано, то вывести загаданное число.


from random import random
n = round(random() * 100)
i = 1
print("Сгенерировано случайное целое число от 0 до 100. У Вас 10 попыток на отгадку.")
while i <= 10:
    u = int(input(str(i) + '-я попытка: '))
    if u > n:
        print('Перебор')
    elif u < n:
        print('Недобор')
    else:
        print('Верно! Вы угадали с %d-й попытки' % i)
        break
    i += 1
else:
    print('Попытки закончились. Было загадано число ', n)

# 07. Напишите программу, доказывающую или проверяющую, что для множества натуральных чисел выполняется равенство:
# 1+2+...+n = n(n+1)/2, где n - любое натуральное число.

print("Введите натуральное число. Будет показано, что выполняется равенство 1+2+...+n = n(n+1)/2")
n = int(input())
s = 0
for i in range(1, n+1):
    s += i
m = n * (n + 1) // 2
print("1+2+...+n= ", s)
print("(n+1)/2= ", m)

# 08. Посчитать, сколько раз встречается определенная цифра в введенной последовательности чисел.
# Количество вводимых чисел и цифра, которую необходимо посчитать, задаются вводом с клавиатуры.

print("Программа показывает, сколько раз встречается определенная цифра в введенной последовательности чисел")
num = int(input("Количество чисел в последовательности? "))
d = int(input("Количество каких цифр подсчитываем? "))
counter = 0
for i in range(1, num + 1):
    m = int(input("Число " + str(i) + ": "))
    while m > 0:
        if m % 10 == d:
            counter += 1
        m = m // 10

print("Было введено %d цифр %d" % (counter, d))

# 09. Среди натуральных чисел, которые были введены, найти наибольшее по сумме цифр.
# Вывести на экран это число и сумму его цифр.

print("Введите натуральные числа. Будет найдено наибольшее по сумме цифр. Для прекращения введите 0")
n = int(input())
max_s = 0
max_m = 0
while n != 0:
    m = n
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
    if s > max_s:
        max_s = s
        max_m = m
    n = int(input())
print('Максимальное число: ', max_m)
print("Сумма цифр: ", max_s)
